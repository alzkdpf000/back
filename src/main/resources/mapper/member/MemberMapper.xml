<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.back.mapper.member.MemberMapper">
    <insert id="insertMember" parameterType="com.example.back.domain.member.MemberVO" useGeneratedKeys="true" keyProperty="id">
        insert into tbl_member(member_email, member_password, member_name, member_phone)
        values (#{memberEmail}, #{memberPassword}, #{memberName}, #{memberPhone})
    </insert>
    <select id="selectMembers">
        select id,
        member_email,
        member_name,
        member_phone,
        member_status,
        member_provider as provider,
        member_kakao_email as kakao_email,
        created_datetime
        from tbl_member
        where member_role = 'member'
        <if test='search.keyword !=null and search.keyword !=""'>
            and ( member_name like concat('%', #{search.keyword}, '%') or
            member_email like concat('%', #{search.keyword}, '%') or
            member_kakao_email like concat('%', #{search.keyword}, '%')
            )
        </if>
        order by id desc
        limit #{criteria.count} offset #{criteria.offset}
    </select>

    <select id="selectCountAllStatus">
        select count(id)
        from tbl_member
        where member_role = 'member'
        <if test='search.keyword !=null and search.keyword !=""'>
            and ( member_name like concat('%', #{search.keyword}, '%') or
            member_email like concat('%', #{search.keyword}, '%') or
            member_kakao_email like concat('%', #{search.keyword}, '%')
            )
        </if>
    </select>

    <select id="selectMemberByIdAllStatus">
        select id,
               member_email,
               member_password,
               member_name,
               member_phone,
               member_status,
               member_provider as provider,
               member_kakao_email as kakao_email,
               member_vita_amount,
               created_datetime
        from tbl_member
        where id = #{id}
    </select>

    <update id="updateDoctorStatusToRejected">
        update tbl_member
        set member_status = 'inactive'
        where id=#{memberId}
    </update>


    <select id="selectMemberForLogin">
        select id,
               member_email,
               member_password,
               member_name,
               member_status,
               member_provider,
               member_role,
               created_datetime,
               updated_datetime
        from tbl_member
        where member_email = #{memberEmail} and member_password = #{memberPassword} and member_status = 'active'
    </select>
    <select id="selectMonthlyJoin">
        with recursive T as (select month(date_sub(curdate(), interval 2 month)) AS NUM
                             union all
                             select NUM + 1
                             from T
                             where NUM &lt; month(curdate()))
        select NUM                as date
             , ifnull(B.count, 0) as count
        from T
                 left outer join (select COUNT(id)                           as count
                                       , date_format(created_datetime, '%m') as date
                                  from tbl_member
                                  where DATE_FORMAT(created_datetime, '%Y') = DATE_FORMAT(curdate(), '%Y')
                                  group by date_format(created_datetime, '%m')
                                  order by DATE desc) B
                                 on T.NUM = B.date;

    </select>
    <select id="selectCountTodayJoin">
        select count(id)
        from tbl_member
        where datediff(created_datetime,current_timestamp) = 0
    </select>

    <select id="selectMemberForKakaoEmail">
        select id,
               member_email,
               member_password,
               member_name, member_phone, member_status, member_provider,
               member_kakao_email as kakaoEmail,
               member_kakao_profile_url as kakaoProfileUrl,
               member_role,
               member_vita_amount,
               created_datetime,
               updated_datetime
        from tbl_member
        where member_kakao_email = #{memberKakaoEmail}
    </select>

    <insert id="insertKakaoMember" parameterType="com.example.back.domain.member.MemberVO" useGeneratedKeys="true" keyProperty="id">
        insert into tbl_member(member_name, member_phone, member_provider, member_kakao_email, member_kakao_profile_url)
        values (#{memberName}, #{memberPhone}, #{provider}, #{kakaoEmail}, #{kakaoProfileUrl})
    </insert>
</mapper>
